// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int     @id @default(autoincrement())
  first_name  String
  last_name     String
  email       String  @unique
  role        Role    @default(PATIENT)
  password    String
  is_approved Boolean @default(false)
  is_blocked  Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  address Address[]
  profile Profile[]

  appointment Appointment[]
  category    Category[]
}

model Address {
  id       Int    @id @default(autoincrement())
  address  String
  zip_code String
  city     String
  country  String
  user     User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id  Int
}

model Profile {
  id          Int    @id @default(autoincrement())
  specialty   String
  image       String
  user_id     Int
  user        User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  availablity String
}

model Appointment {
  id       Int      @id @default(autoincrement())
  type     String
  date     DateTime
  time     DateTime
  duration String

  user    User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id Int
}

model Category {
  id      Int    @id @default(autoincrement())
  name    String
  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id Int
}

enum Role {
  PATIENT
  ADMIN
  DOCTOR
}
